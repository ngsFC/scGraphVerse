% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cutoff_adjacency.R
\name{cutoff_adjacency}
\alias{cutoff_adjacency}
\title{Apply a cutoff to adjacency matrices based on shuffled network percentiles}
\usage{
cutoff_adjacency(
  count_matrices,
  weighted_adjm_list,
  ground.truth,
  n,
  method = "GRNBoost2",
  weight_function = "mean",
  nCores = NULL
)
}
\arguments{
\item{count_matrices}{A list of count matrices (expression data) used to infer networks.}

\item{weighted_adjm_list}{A list of precomputed weighted adjacency matrices for the count data.}

\item{ground.truth}{A square matrix representing the ground truth network.}

\item{n}{The number of shuffled matrices to generate for calculating percentiles.}

\item{method}{The method for network inference. It can be one of the following:
"GRNBoost2", "GENIE3", or "JRF".}

\item{weight_function}{The function used to symmetrize the adjacency matrices. Default is "mean".}

\item{nCores}{The number of cores to use for parallel computation (default is NULL for sequential).}
}
\value{
A list of binary adjacency matrices (0s and 1s) for each count matrix.
The binary matrices are generated by applying the 95th percentile cutoff to the
weighted adjacency matrices.
}
\description{
This function processes a list of count matrices and applies a cutoff to the adjacency
matrices derived from weighted networks inferred using a specified method. The cutoff is
calculated based on the 95th percentile of the weights from shuffled matrices. The function
supports different network inference methods like GRNBoost2, GENIE3, and JRF.
}
\details{
This function generates shuffled matrices to calculate the 95th percentile of weights
for each count matrix. Based on this, a cutoff is applied to the corresponding weighted
adjacency matrix, converting the weights into binary values (1 for values greater than
the 95th percentile, and 0 otherwise). The function handles different network inference
methods, including "GRNBoost2", "GENIE3", and "JRF", and allows for parallel processing.
}
\examples{
\dontrun{
# Example usage of the cutoff_adjacency function
binary_adjm_list <- cutoff_adjacency(count_matrices = count_matrices,
                                     weighted_adjm_list = weighted_adjm_list,
                                     ground.truth = ground_truth_matrix,
                                     n = 100,
                                     method = "GRNBoost2",
                                     weight_function = "mean",
                                     nCores = 4)
}

}
