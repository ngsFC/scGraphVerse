% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cutoff_adjacency.R
\name{cutoff_adjacency}
\alias{cutoff_adjacency}
\title{Threshold Adjacency Matrices Based on Shuffled Network Quantiles}
\usage{
cutoff_adjacency(
  count_matrices,
  weighted_adjm_list,
  n,
  method = "GENIE3",
  quantile_threshold = 0.99,
  weight_function = "mean",
  nCores = 1,
  grnboost_modules = NULL,
  debug = FALSE
)
}
\arguments{
\item{count_matrices}{A list of expression matrices (genes × cells) or
\linkS4class{Seurat} or \linkS4class{SingleCellExperiment}
objects.}

\item{weighted_adjm_list}{A list of weighted adjacency matrices (one per
expression matrix) to threshold.}

\item{n}{Integer. Number of shuffled replicates generated per original
expression matrix.}

\item{method}{Character string. One of \code{"GENIE3"}, \code{"GRNBoost2"},
or \code{"JRF"}.}

\item{quantile_threshold}{Numeric. The quantile used to define the cutoff.
Default is \code{0.99}.}

\item{weight_function}{Character string or function used to symmetrize
adjacency matrices (\code{"mean"}, \code{"max"}, etc.).}

\item{nCores}{Integer. Number of CPU cores to use for
parallelization. Default is the number of workers in the current
\pkg{BiocParallel} backend.}

\item{grnboost_modules}{Python modules needed for \code{GRNBoost2} if
using reticulate.}

\item{debug}{Logical. If \code{TRUE}, prints detailed progress messages.
Default is \code{FALSE}.}
}
\value{
A list of binary (thresholded) adjacency matrices, each
corresponding to an input weighted matrix.
}
\description{
Applies a cutoff to weighted adjacency matrices using a percentile
estimated from shuffled versions of the original expression matrices.
Supports inference methods \code{"GENIE3"}, \code{"GRNBoost2"},
and \code{"JRF"}.
}
\details{
For each input expression matrix, \code{n} shuffled versions are
generated by randomly permuting each gene’s expression across cells.
Network inference is performed on the shuffled matrices, and a cutoff
is determined as the specified quantile (\code{quantile_threshold}) of
the resulting edge weights. The original weighted adjacency matrices
are then thresholded using these estimated cutoffs.

Parallelization is handled via \pkg{BiocParallel}.

The methods are based on:
\itemize{
\item \strong{GENIE3}: Random Forest-based inference (Huynh-Thu et
al., 2010).
\item \strong{GRNBoost2}: Gradient boosting trees using arboreto
(Moerman et al., 2019).
\item \strong{JRF}: Joint Random Forests across multiple conditions
(Petralia et al., 2015).
}
}
\examples{
data(count_matrices)

networks <- infer_networks(
    count_matrices_list = count_matrices,
    method = "GENIE3",
    nCores = 15
)
head(networks[[1]])

wadj_list <- generate_adjacency(networks)
swadj_list <- symmetrize(wadj_list, weight_function = "mean")

binary_listj <- cutoff_adjacency(
    count_matrices = count_matrices,
    weighted_adjm_list = swadj_list,
    n = 2,
    method = "GENIE3",
    quantile_threshold = 0.99,
    nCores = 15,
    debug = TRUE
)
head(binary_listj[[1]])
}
