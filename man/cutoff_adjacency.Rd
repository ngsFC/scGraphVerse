% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cutoff_adjacency.R
\name{cutoff_adjacency}
\alias{cutoff_adjacency}
\title{Threshold Adjacency Matrices Based on Shuffled Network Quantiles}
\usage{
cutoff_adjacency(
  count_matrices,
  weighted_adjm_list,
  n,
  method = "GENIE3",
  quantile_threshold = 0.99,
  weight_function = "mean",
  total_cores = BiocParallel::bpworkers(BiocParallel::bpparam()),
  grnboost_modules = NULL,
  seed = 123,
  debug = FALSE
)
}
\arguments{
\item{count_matrices}{A list of expression matrices (genes Ã— cells) or \linkS4class{Seurat} or \linkS4class{SingleCellExperiment} objects.}

\item{weighted_adjm_list}{A list of weighted adjacency matrices (one per expression matrix) to threshold.}

\item{n}{Integer. Number of shuffled replicates generated per original expression matrix.}

\item{method}{Character string. One of \code{"GENIE3"}, \code{"GRNBoost2"}, or \code{"JRF"}.}

\item{quantile_threshold}{Numeric. The quantile used to define the cutoff. Default is \code{0.99}.}

\item{weight_function}{Character string or function used to symmetrize adjacency matrices (\code{"mean"}, \code{"max"}, etc.).}

\item{total_cores}{Integer. Total number of CPU cores to use for parallelism.}

\item{grnboost_modules}{Python modules needed for \code{GRNBoost2} if using reticulate.}

\item{seed}{Integer. Random seed for reproducibility. Default is \code{123}.}

\item{debug}{Logical. If \code{TRUE}, prints detailed progress messages and cutoff values. Default is \code{FALSE}.}
}
\value{
A list of binary (thresholded) adjacency matrices, each corresponding to an input weighted matrix.
}
\description{
Applies a cutoff to weighted adjacency matrices using a percentile estimated
from shuffled versions of the original expression matrices. Supports inference methods
\code{"GENIE3"}, \code{"GRNBoost2"}, and \code{"JRF"}.
}
\details{
For each input expression matrix, \code{n} shuffled versions are generated by randomly permuting each gene's expression across cells.
Network inference is performed on the shuffled matrices, and a cutoff is determined as the specified quantile (\code{quantile_threshold})
of the resulting edge weights. The final binary adjacency matrices are obtained by thresholding the original weighted matrices
using the estimated cutoffs.

Parallelism is handled via \pkg{BiocParallel}. Nested parallelism is supported for methods like \code{GENIE3} and \code{JRF}.
}
\examples{
set.seed(123)
# Simulate small expression matrices
mat1 <- matrix(rpois(100, lambda = 5), nrow = 10, ncol = 10)
mat2 <- matrix(rpois(100, lambda = 5), nrow = 10, ncol = 10)
rownames(mat1) <- paste0("Gene", 1:10)
rownames(mat2) <- paste0("Gene", 1:10)

# Simulate weighted adjacency matrices
adjm1 <- matrix(runif(100), nrow = 10)
adjm2 <- matrix(runif(100), nrow = 10)
rownames(adjm1) <- colnames(adjm1) <- paste0("Gene", 1:10)
rownames(adjm2) <- colnames(adjm2) <- paste0("Gene", 1:10)

# Threshold using cutoff_adjacency
bin_adjm_list <- cutoff_adjacency(
  count_matrices = list(mat1, mat2),
  weighted_adjm_list = list(adjm1, adjm2),
  n = 2,
  method = "GENIE3",
  quantile_threshold = 0.95,
  total_cores = 2,
  seed = 42,
  debug = TRUE
)

# Check one binary adjacency matrix
bin_adjm_list[[1]]
}
