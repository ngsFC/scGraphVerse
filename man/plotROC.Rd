% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotROC.R
\name{plotROC}
\alias{plotROC}
\title{Plot ROC Curves for Inferred Networks}
\usage{
plotROC(matrices_list, ground_truth, plot_title, is_binary = FALSE)
}
\arguments{
\item{matrices_list}{A list of square matrices representing predicted
interactions. Each must share dimnames with \code{ground_truth}; entries
may be binary (0/1) or continuous weights.}

\item{ground_truth}{A square binary matrix indicating true interactions (1)
in the upper triangle. Must match dims and names of each element of
\code{matrices_list}.}

\item{plot_title}{Character string. Title for the ROC plot.}

\item{is_binary}{Logical. If \code{TRUE}, treat matrices as binary
predictions. Default \code{FALSE} for weighted predictions.}
}
\value{
A list with:\cr
\code{auc}: data frame of AUC per matrix.\cr
\code{plot}: the ROC plot (via ggplot2).
}
\description{
Computes and visualizes Receiver Operating Characteristic (ROC) curves for
a list of predicted adjacency matrices compared against a binary ground
truth network.
}
\details{
For binary matrices, a single TPR/FPR point is computed per
matrix. For weighted ones, a full ROC curve is computed from continuous
scores. Diagonals are ignored; symmetry is not enforced.
}
\examples{
data(count_matrices)
data(adj_truth)

networks <- infer_networks(
    count_matrices_list = count_matrices,
    method = "GENIE3",
    nCores = 15
)
head(networks[[1]])

wadj_list <- generate_adjacency(networks)
swadj_list <- symmetrize(wadj_list, weight_function = "mean")

roc_res <- plotROC(
    swadj_list,
    adj_truth,
    plot_title = "ROC Curve: JRF Joint Integration",
    is_binary = FALSE
)
roc_res$plot
auc_joint <- roc_res$auc
}
