% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edge_mining.R
\name{edge_mining}
\alias{edge_mining}
\title{Edge Mining of Gene Interactions Using PubMed}
\usage{
edge_mining(
  predicted_list,
  ground_truth,
  delay = 1,
  query_field = "Title/Abstract",
  query_edge_types = c("TP", "FP", "FN"),
  max_retries = 10,
  BPPARAM = BiocParallel::bpparam()
)
}
\arguments{
\item{predicted_list}{A list of predicted gene adjacency matrices (with row and column names as gene symbols).}

\item{ground_truth}{A ground truth adjacency matrix (0/1) with row and column names.}

\item{delay}{Numeric. Seconds to wait between consecutive queries (default = 0.5).}

\item{query_field}{Character. The PubMed search field to use. Options: "Title/Abstract" (default), "Title", "Abstract".}

\item{query_edge_types}{Character vector. Which edge types to query: "TP", "FP", "FN" (default all).}

\item{max_retries}{Integer. Number of maximum retries for PubMed queries (default = 3).}

\item{BPPARAM}{A BiocParallel parameter object specifying how parallelization should be performed. Default = bpparam().}
}
\value{
A named list of data frames. Each data frame includes:
\describe{
\item{gene1}{First gene in the interaction}
\item{gene2}{Second gene}
\item{edge_type}{"TP", "FP", or "FN"}
\item{pubmed_hits}{Number of PubMed hits}
\item{PMIDs}{Comma-separated PubMed IDs or NA}
\item{query_status}{"hits_found", "no_hits", "error"}
}
}
\description{
Query PubMed for Literature Evidence Supporting Predicted Gene-Gene Interactions
}
\details{
This function compares predicted gene adjacency matrices against a ground truth
matrix, identifies specific edge types (True Positives, False Positives, False Negatives),
and queries PubMed for each gene pair. It returns the number of PubMed hits, associated PMIDs, and query status.
}
\examples{

set.seed(123)
predicted <- matrix(rbinom(100, 1, 0.1), nrow = 10)
rownames(predicted) <- colnames(predicted) <- paste0("Gene", 1:10)
ground_truth <- matrix(rbinom(100, 1, 0.05), nrow = 10)
rownames(ground_truth) <- colnames(ground_truth) <- paste0("Gene", 1:10)

results <- edge_mining(predicted_list = list(pred_net = predicted), ground_truth = ground_truth)
head(results$pred_net)
}
