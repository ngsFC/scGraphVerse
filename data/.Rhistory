#keggf <- kegg_pathways %>% filter(gs_name %in% c("KEGG_T_CELL_RECEPTOR_SIGNALING_PATHWAY", "KEGG_CYTOKINE_CYTOKINE_RECEPTOR_INTERACTION", "KEGG_JAK_STAT_SIGNALING_PATHWAY", "KEGG_NOD_LIKE_RECEPTOR_SIGNALING_PATHWAY"))
#topgenes <- topExp(seurat_object, "mature NK T cell", mart, 200)
pathgenes <- pathg(seurat_object = seurat_object, cell_type = "mature NK T cell", mart = mart, top_n = 1000)
#unique(keggf$human_ensembl_gene)
biogrid_data <- read.delim("/home/francescoc/Desktop/GRN_project/data/biogrid_physical_s400.txt", header = TRUE, stringsAsFactors = FALSE)
#quantile(abs(Score), 0.75)
mart <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")
top_genes <- getBM(
attributes = c("ensembl_gene_id", "external_gene_name"),
filters = "ensembl_gene_id",
values = pathgenes,
mart = mart
)
top_genes <- top_genes$external_gene_name[top_genes$external_gene_name != ""]
result <- BioGRID_Adj(top_genes, biogrid_data)
wadjm <- result$weighted
adjm <- result$binary
common_names <- intersect(rownames(adjm), colnames(adjm))
adjm <- adjm[common_names, common_names, drop = FALSE]
print(dim(adjm))
gtruth <- igraph::graph_from_adjacency_matrix(adjm, mode = "undirected", diag = F)
num_nodes <- vcount(gtruth)
num_edges <- ecount(gtruth)
set.seed(1234)
plot(gtruth,
main = paste("Ground Truth\nNodes:", num_nodes, "Edges:", num_edges),
vertex.label.color = "black",
vertex.size = 6,
edge.width = 2,
vertex.label = NA,
vertex.color = "steelblue",
layout = igraph::layout_with_fr)
ncell <- 500
nodes <- nrow(adjm)
set.seed(1130)
mu_values <- c(3, 6, 9)
theta_values <- c(1, 0.7, 0.5)
count_matrices <- lapply(1:3, function(i) {
set.seed(1130 + i)
mu_i <- mu_values[i]
theta_i <- theta_values[i]
count_matrix_i <- simdata(n = ncell, p = nodes, B = adjm, family = "ZINB",
mu = mu_i, mu_noise = 1, theta = theta_i, pi = 0.2)
count_matrix_df <- as.data.frame(count_matrix_i)
colnames(count_matrix_df) <- colnames(adjm)
rownames(count_matrix_df) <- paste("cell", 1:nrow(count_matrix_df), sep = "")
return(count_matrix_df)
})
count_matrices[[1]] %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "Simulated count matrix")
saveRDS(count_matrices, "./../analysis/count_matrices.RDS")
set.seed(1234)
time[["GENIE3_late_15Cores"]] <- system.time(
genie3_late <- infer_networks(count_matrices, method="GENIE3", nCores = 15)
)
saveRDS(genie3_late, "./../analysis/genie3_late.RDS")
genie3_late[[1]] %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "GENIE3 output")
genie3_late_wadj <- generate_adjacency(genie3_late, ground.truth = adjm)
sgenie3_late_wadj <- symmetrize(genie3_late_wadj, weight_function = "mean")
genie3_late_auc <- plotROC(sgenie3_late_wadj, adjm, plot_title = "ROC curve - GENIE3 Late Integration")
sgenie3_late_wadj[[1]] %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "GENIE3 symmetrize output")
sgenie3_late_adj <- cutoff_adjacency(count_matrices = count_matrices,
weighted_adjm_list = sgenie3_late_wadj,
ground.truth = adjm,
n = 3,
method = "GENIE3",
nCores = 15)
sgenie3_late_adj[[1]] %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "GENIE3 adjacency")
scores.genie3.late.all <- pscores(adjm, sgenie3_late_adj)
scores.genie3.late.all$Statistics %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "scores")
plots <- plotg(sgenie3_late_adj)
consesusm <- create_consensus(sgenie3_late_adj, method="vote")
consesusu <- create_consensus(sgenie3_late_adj, method="union")
consesunet <- create_consensus(adj_matrix_list = sgenie3_late_adj, weighted_list = sgenie3_late_wadj, method = "INet", threshold = 0.05, ncores = 15)
scores.genie3.late <- pscores(adjm, list(consesusm))
scoresu.genie3.late <- pscores(adjm, list(consesusu))
scoresnet.genie3.late <- pscores(adjm, list(consesunet))
scores.genie3.late$Statistics %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "scores vote")
scores.genie3.late$Statistics %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "scores union")
scoresnet.genie3.late$Statistics %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "scores INet")
set.seed(1234)
time[["GRNBoost_late"]] <- system.time(
grnb_late <- infer_networks(count_matrices, method="GRNBoost2")
)
saveRDS(grnb_late, "./../analysis/grnb_late.RDS")
grnb_late[[1]] %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "GRNBoost2 output")
grnb_late_wadj <- generate_adjacency(grnb_late, ground.truth = adjm)
sgrnb_late_wadj <- symmetrize(grnb_late_wadj, weight_function = "mean")
grnb_late_auc <- plotROC(sgrnb_late_wadj, adjm, plot_title = "ROC curve - GRNBoost2 Late Integration")
sgrnb_late_wadj[[1]] %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "GRNBoost2 symmetrize output")
sgrnb_late_adj <- cutoff_adjacency(count_matrices = count_matrices,
weighted_adjm_list = sgrnb_late_wadj,
ground.truth = adjm,
n = 3,
method = "GRNBoost2")
sgrnb_late_adj[[1]] %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "GRNBoost2 adjacency")
scores.grn.late.all <- pscores(adjm, sgrnb_late_adj)
scores.grn.late.all$Statistics %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "scores")
plots <- plotg(sgrnb_late_adj)
consesusm <- create_consensus(sgrnb_late_adj, method="vote")
consesusu <- create_consensus(sgrnb_late_adj, method="union")
consesunet <- create_consensus(adj_matrix_list = sgrnb_late_adj, weighted_list = sgrnb_late_wadj, method = "INet", threshold = 0.05, ncores = 15)
scores.grn.late <- pscores(adjm, list(consesusm))
scoresu.grn.late <- pscores(adjm, list(consesusu))
scoresnet.grn.late <- pscores(adjm, list(consesunet))
scores.grn.late$Statistics %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "scores vote")
scoresu.grn.late$Statistics %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "scores union")
scoresnet.grn.late$Statistics %>%
datatable(extensions = 'Buttons',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel'),
scrollX = TRUE,
pageLength = 10),
caption = "scores INet")
ajm_compared <- compare_consensus(consesusm, adjm)
ajm_compared <- compare_consensus(consesusu, adjm)
ajm_compared <- compare_consensus(consesunet, adjm)
set.seed(1234)
time[["ZILGM_late_15Cores"]] <- system.time(
zilgm_late <- infer_networks(count_matrices_list = count_matrices, method = "ZILGM", adjm = adjm, nCores = 15)
)
library(tidyverse)
methtab <- read.table("/home/francescoc/Downloads/GSE236026_WT.Day12.cpg.methexport.tab")
colnames(methtab) <- c("chr", "pos", "strand", "Cs", "TotalC")
View(methtab)
int <- methtab %>%
filter(chr == "chr1") %>%
filter(between(pos, 10474, 11451)) %>%
filter(strand == "+") %>%
mutate(meth = Cs/TotalC)
View(int)
setwd("/home/francescoc/Desktop/GRN_project/data")
library(tidyverse)
library(GENIE3)
library(igraph)
library(ggraph)
# ---- Load Count matrices ----
count_matrices <- readRDS("./../analysis/count_matrices_p500xn643.RDS")
dim(count_matrices)
dim(count_matrices[[1]])
set.seed(1234)
time[["GENIE3_late_15Cores"]] <- system.time(
genie3_late <- infer_networks(count_matrices, method="GENIE3", nCores = 15)
)
time <- list()
source("infer_networks.R")
source("./../R/infer_networks.R")
set.seed(1234)
time[["GENIE3_late_15Cores"]] <- system.time(
genie3_late <- infer_networks(count_matrices, method="GENIE3", nCores = 15)
)
saveRDS(genie3_late, "./../analysis/genie3_late_p500n643.RDS")
genie3_late_wadj <- generate_adjacency(genie3_late, ground.truth = adjm)
source("./../R/generate_adjacency.R")
genie3_late_wadj <- generate_adjacency(genie3_late, ground.truth = adjm)
adjm <- read.table("./../analysis/adjm_p500n643.txt")
head(adjm)
View(adjm)
adjm <- read.table("./../analysis/adjm_p500n643.txt")
genie3_late_wadj <- generate_adjacency(genie3_late, ground.truth = adjm)
sgenie3_late_wadj <- symmetrize(genie3_late_wadj, weight_function = "mean")
source("./../R/symmetrize.R")
source("./../R/plotROC.R")
sgenie3_late_wadj <- symmetrize(genie3_late_wadj, weight_function = "mean")
genie3_late_auc <- plotROC(sgenie3_late_wadj, adjm, plot_title = "ROC curve - GENIE3 Late Integration")
source("./../R/plotROC.R")
genie3_late_auc <- plotROC(sgenie3_late_wadj, adjm, plot_title = "ROC curve - GENIE3 Late Integration")
library(pROC)
source("./../R/plotROC.R")
genie3_late_auc <- plotROC(sgenie3_late_wadj, adjm, plot_title = "ROC curve - GENIE3 Late Integration")
library(RColorBrewer)
genie3_late_auc <- plotROC(sgenie3_late_wadj, adjm, plot_title = "ROC curve - GENIE3 Late Integration")
library(scales)
source("./../R/plotROC.R")
genie3_late_auc <- plotROC(sgenie3_late_wadj, adjm, plot_title = "ROC curve - GENIE3 Late Integration")
genie3_late_auc
genie3_late_auc$AUC
genie3_late_auc$Matrix
ggsave("genie3_late_p500n643_auc.png", genie3_late_auc, width = 8, height = 6, dpi = 300)
png("/../analysis/plots/genie3_late_p500n643_auc.png", width = 2400, height = 1800, res = 300)
genie3_late_auc <- plotROC(sgenie3_late_wadj, adjm, plot_title = "ROC curve - GENIE3 Late Integration")
dev.off()
png("/../analysis/plots/genie3_late_p500n643_auc.png", width = 2400, height = 1800, res = 300)
plotROC(sgenie3_late_wadj, adjm, plot_title = "ROC curve - GENIE3 Late Integration")
dev.off()
png("./../analysis/plots/genie3_late_p500n643_auc.png", width = 2400, height = 1800, res = 300)
plotROC(sgenie3_late_wadj, adjm, plot_title = "ROC curve - GENIE3 Late Integration")
dev.off()
png("./../analysis/plots/genie3_late_p500n643_auc.png", width = 2400, height = 1800, res = 300)
genie3_late_auc <- plotROC(sgenie3_late_wadj, adjm, plot_title = "ROC curve - GENIE3 Late Integration")
dev.off()
sgenie3_late_adj <- cutoff_adjacency(count_matrices = count_matrices,
weighted_adjm_list = sgenie3_late_wadj,
ground.truth = adjm,
n = 3,
method = "GENIE3",
nCores = 15)
source("./../R/cutoff_adjacency.R")
sgenie3_late_adj <- cutoff_adjacency(count_matrices = count_matrices,
weighted_adjm_list = sgenie3_late_wadj,
ground.truth = adjm,
n = 3,
method = "GENIE3",
nCores = 15)
scores.genie3.late.all <- pscores(adjm, sgenie3_late_adj)
source("./../R/pscores.R")
source("./../R/plotg.R")
source("./../R/create_consensus.R")
source("./../R/compare_consensus.R")
scores.genie3.late.all <- pscores(adjm, sgenie3_late_adj)
plots <- plotg(sgenie3_late_adj)
plots <- plotg(sgenie3_late_adj)
scores.genie3.late.all <- pscores(adjm, sgenie3_late_adj)
scores.genie3.late.all$Statistics
png("./../analysis/plots/genie3_late_p500n643_scores.png", width = 2400, height = 1800, res = 300)
scores.genie3.late.all <- pscores(adjm, sgenie3_late_adj)
dev.off()
plots <- plotg(sgenie3_late_adj)
source("./../R/plotg.R")
plots <- plotg(sgenie3_late_adj)
library(patchwork)
source("./../R/plotg.R")
plots <- plotg(sgenie3_late_adj)
plots <- plotg(sgenie3_late_adj)
source("./../R/plotg.R")
plots <- plotg(sgenie3_late_adj)
source("./../R/plotg.R")
plots <- plotg(sgenie3_late_adj)
source("./../R/plotg.R")
plots <- plotg(sgenie3_late_adj)
library(gridExtra)
source("./../R/plotg.R")
plots <- plotg(sgenie3_late_adj)
png("./../analysis/plots/genie3_late_p500n643_mplots.png", width = 2400, height = 2400, res = 300)
plots <- plotg(sgenie3_late_adj)
dev.off()
consesusm <- create_consensus(sgenie3_late_adj, method="vote")
consesusu <- create_consensus(sgenie3_late_adj, method="union")
consesunet <- create_consensus(adj_matrix_list = sgenie3_late_adj, weighted_list = sgenie3_late_wadj, method = "INet", threshold = 0.05, ncores = 15)
library(INetTool)
consesunet <- create_consensus(adj_matrix_list = sgenie3_late_adj, weighted_list = sgenie3_late_wadj, method = "INet", threshold = 0.05, ncores = 15)
scores.genie3.late <- pscores(adjm, list(consesusm))
scoresu.genie3.late <- pscores(adjm, list(consesusu))
scoresnet.genie3.late <- pscores(adjm, list(consesunet))
png("./../analysis/plots/genie3_late_p500n643_vote_score.png", width = 2400, height = 2400, res = 300)
scores.genie3.late <- pscores(adjm, list(consesusm))
dev.off()
png("./../analysis/plots/genie3_late_p500n643_union_score.png", width = 2400, height = 2400, res = 300)
scoresu.genie3.late <- pscores(adjm, list(consesusu))
dev.off()
png("./../analysis/plots/genie3_late_p500n643_inet_score.png", width = 2400, height = 2400, res = 300)
scoresnet.genie3.late <- pscores(adjm, list(consesunet))
dev.off()
ajm_compared <- compare_consensus(consesusm, adjm)
ajm_compared <- compare_consensus(consesusu, adjm)
ajm_compared <- compare_consensus(consesunet, adjm)
adjm
class(consesusm)
ajm_compared <- compare_consensus(consesusm, adjm)
colnames(adjm)
colnames(consesusm)
ajm_compared <- compare_consensus(consesusm, adjm)
library(GENIE3)
library(doParallel)
library(igraph)
library(tidyverse)
library(DT)
library(reticulate)
library(learn2count)
library(reshape2)
library(gridExtra)
library(DiagrammeR)
library(pROC)
library(JRF)
library(DiagrammeRsvg)
library(rsvg)
library(RColorBrewer)
library(ZILGM)
library(patchwork)
library(scales)
library(INetTool)
library(knitr)
library(microbenchmark)
library(Seurat)
library(biomaRt)
library(STRINGdb)
library(httr)
library(msigdbr)
library(GENIE3)
library(doParallel)
library(igraph)
library(tidyverse)
library(DT)
library(reticulate)
library(learn2count)
library(reshape2)
library(gridExtra)
library(DiagrammeR)
library(pROC)
library(JRF)
library(DiagrammeRsvg)
library(rsvg)
library(RColorBrewer)
library(ZILGM)
library(patchwork)
library(scales)
library(INetTool)
library(knitr)
library(microbenchmark)
library(Seurat)
library(biomaRt)
library(STRINGdb)
library(httr)
library(msigdbr)
ajm_compared <- compare_consensus(consesusm, adjm)
source("./../R/compare_consensus.R")
ajm_compared <- compare_consensus(consesusm, adjm)
source("./../R/compare_consensus.R")
ajm_compared <- compare_consensus(consesusm, adjm)
ajm_compared <- compare_consensus(consesusu, adjm)
ajm_compared <- compare_consensus(consesunet, adjm)
_
source("./../R/compare_consensus.R")
ajm_compared <- compare_consensus(consesusm, adjm)
ajm_compared <- compare_consensus(consesusm, adjm)
ajm_compared <- compare_consensus(consesunet, adjm)
source("./../R/compare_consensus.R")
ajm_compared <- compare_consensus(consesusm, adjm)
class(consesusm)
dim(consesusm)
dim(adjm)
View(consesusm)
graph_original <- create_graph(adjm)
graph_consensus <- create_graph(consesusm)
create_graph <- function(adj_matrix) {
graph <- graph_from_adjacency_matrix(adj_matrix, mode = "undirected", diag = FALSE)
return(graph)
}
graph_original <- create_graph(adjm)
graph_consensus <- create_graph(consesusm)
graph_consensus
original_edges <- as_edgelist(graph_original)
consensus_edges <- as_edgelist(graph_consensus)
original_edges_str <- apply(original_edges, 1, function(x) paste(sort(x), collapse = "-"))
consensus_edges_str <- apply(consensus_edges, 1, function(x) paste(sort(x), collapse = "-"))
edge_colors_ground_truth <- ifelse(original_edges_str %in% consensus_edges_str, "red", "blue")
TP_count <- sum(edge_colors_ground_truth == "red")
FN_count <- sum(edge_colors_ground_truth == "blue")
plot_ggraph <- function(graph, plot_title, edge_colors = NULL) {
ggraph(graph, layout = "fr") +
geom_edge_link(aes(color = edge_colors), width = 0.5) +
geom_node_point(color = "steelblue", size = 0.7) +
labs(title = plot_title) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "none"
)
)
plot_ggraph <- function(graph, plot_title, edge_colors = NULL) {
ggraph(graph, layout = "fr") +
geom_edge_link(aes(color = edge_colors), width = 0.5) +
geom_node_point(color = "steelblue", size = 0.7) +
labs(title = plot_title) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "none"
)
}
plot_ground_truth <- plot_ggraph(graph_original, plot_title = paste("Ground Truth\nTP:", TP_count, "FN:", FN_count), edge_colors = edge_colors_ground_truth)
plot_ground_truth
graph_original
graph_original <- create_graph(adjm)
graph_original
class(adjm)
adjm <- as.matrix(read.table("./../analysis/adjm_p500n643.txt"))
source("./../R/compare_consensus.R")
ajm_compared <- compare_consensus(consesusm, adjm)
ajm_compared <- compare_consensus(consesusu, adjm)
source("./../R/compare_consensus.R")
ajm_compared <- compare_consensus(consesusm, adjm)
ajm_compared <- compare_consensus(consesusu, adjm)
ajm_compared <- compare_consensus(consesunet, adjm)
png("./../analysis/plots/genie3_late_p500n643_vote_plot.png", width = 2400, height = 2400, res = 300)
ajm_compared <- compare_consensus(consesusm, adjm)
dev.off()
png("./../analysis/plots/genie3_late_p500n643_union_plot.png", width = 2400, height = 2400, res = 300)
ajm_compared <- compare_consensus(consesusu, adjm)
dev.off()
png("./../analysis/plots/genie3_late_p500n643_inet_plot.png", width = 2400, height = 2400, res = 300)
ajm_compared <- compare_consensus(consesunet, adjm)
dev.off()
source("./../R/compare_consensus.R")
ajm_compared <- compare_consensus(consesusm, adjm)
scores.genie3.late$Statistics
png("./../analysis/plots/genie3_late_p500n643_vote_plot.png", width = 2400, height = 2400, res = 300)
ajm_compared <- compare_consensus(consesusm, adjm)
dev.off()
png("./../analysis/plots/genie3_late_p500n643_union_plot.png", width = 2400, height = 2400, res = 300)
ajm_compared <- compare_consensus(consesusu, adjm)
dev.off()
png("./../analysis/plots/genie3_late_p500n643_inet_plot.png", width = 2400, height = 2400, res = 300)
ajm_compared <- compare_consensus(consesunet, adjm)
dev.off()
early_matrix <- list(earlyj(count_matrices))
source("./../R/earlyj.R")
early_matrix <- list(earlyj(count_matrices))
early_matrix <- list(earlyj(count_matrices))
set.seed(1234)
time[["GENIE3_early_15Cores"]] <- system.time(
genie3_early <- infer_networks(early_matrix, method="GENIE3", nCores = 15)
)
saveRDS(genie3_early, "./../analysis/genie3_early_p500n643.RDS")
