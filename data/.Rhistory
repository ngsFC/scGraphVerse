mutate(
Time_in_Minutes = Time_in_Seconds / 60,
Time_in_Hours = Time_in_Seconds / 3600,
Ratio = nrow(adjm) / ncol(count_matrices[[1]]),
p = nrow(adjm)
) %>%
arrange(Time_in_Hours) %>%
mutate(Method = factor(Method, levels = Method)) %>%
separate(Method, into = c("Method", "Predicted_Matrix", "Cores"), sep = "_", fill = "right") %>%
mutate(
Predicted_Matrix = ifelse(Method == "JRF", "joint", Predicted_Matrix),
Cores = case_when(
Method %in% c("JRF", "GRNBoost2") ~ "15Cores",
TRUE ~ Cores
)
)
df2 <- keepscores %>%
mutate(
Predicted_Matrix_Mapped = case_when(
Method == "JRF" ~ "joint",
Predicted_Matrix == "early" ~ "early",
Predicted_Matrix %in% c("vote", "union", "inet") ~ "late",
TRUE ~ Predicted_Matrix
)
)
df1_unique <- time_data %>%
dplyr::select(Method, Predicted_Matrix, Time_in_Seconds, Time_in_Minutes, Time_in_Hours) %>%
distinct()
df2 <- df2 %>%
left_join(df1_unique, by = c("Method", "Predicted_Matrix_Mapped" = "Predicted_Matrix")) %>%
dplyr::select(-Predicted_Matrix_Mapped)
write.table(df2, file.path(ddir, "met_n100_p100.txt"), quote = FALSE, col.names = TRUE, row.names = FALSE, sep = "\t")
sessionInfo()
df2
colnames(df2)
knitr::opts_knit$set(root.dir = "/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results",message=FALSE, warning=FALSE)
library(dplyr)
library(purrr)
library(patchwork)
library(tidyr)
library(ggplot2)
met_files <- c("/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/met_n100_p100.txt", "/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/met_n100_p200.txt", "/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/met_n100_p500.txt")
met_files <- c("/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp100_10runs.txt",
"/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp200_10runs.txt",
"/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp500_10runs.txt")
read_and_fulljoin <- function(files) {
df_list <- lapply(files, read.table, header = TRUE, sep = "\t", stringsAsFactors = FALSE)
full_joined_df <- Reduce(function(x, y) full_join(x, y), df_list)
return(full_joined_df)
}
met_data <- read_and_fulljoin(met_files)
View()
View(met_data)
met_late <- met_data %>%
mutate(Ratio = as.character(Ratio_mean),
p = as.character(p_mean)) %>%
filter(Predicted_Matrix %in% c("vote", "union", "inet")) %>%
filter(Method != "JRF")
met_late_long <- met_late %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_late_long, aes(x = p, y = Value,
color = Method,
shape = Predicted_Matrix,
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.4, alpha=0.7) +  # Slightly increase line size and adjust transparency
geom_point(size = 2, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_base
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
met_comp_long <- met_comp %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes")),
p = factor(p, levels = c("82", "217", "554")))
met_comp <- met_data %>%
mutate(Ratio = as.character(Ratio_mean),
p = as.character(p_mean)) %>%
filter(!Predicted_Matrix %in% c("inet", "union")) %>%
mutate(
Predicted_Matrix = ifelse(Predicted_Matrix == "vote", "late", Predicted_Matrix),
Predicted_Matrix = ifelse(Method == "JRF", "joint", Predicted_Matrix)  # Replace JRF with joint
)
met_comp_long <- met_comp %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_comp_long, aes(x = p, y = Value,
color = Method,
linetype = Predicted_Matrix,  # Change to linetype
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.7, alpha=0.8) +  # Increase line size for better visibility
geom_point(size = 1, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
scale_linetype_manual("Integration", values = c("late"="dashed", "early"="dotted", "joint"="solid")) +  # Custom line types
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
View()
View(met_comp)
met_comp <- met_data %>%
mutate(Ratio = as.character(Ratio_mean),
p = as.character(p_mean)) %>%
filter(!Predicted_Matrix %in% c("inet", "union")) %>%
mutate(
Predicted_Matrix = ifelse(Predicted_Matrix == "vote", "late", Predicted_Matrix),
Predicted_Matrix = ifelse(Method == "JRF", "joint", Predicted_Matrix)  # Replace JRF with joint
)
met_comp_long <- met_comp %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_comp_long, aes(x = p, y = Value,
color = Method,
linetype = Predicted_Matrix,  # Change to linetype
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.7, alpha=0.8) +  # Increase line size for better visibility
geom_point(size = 1, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
scale_linetype_manual("Integration", values = c("late"="dashed", "early"="dotted", "joint"="solid")) +  # Custom line types
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
colnames(v)
colnames(met_comp)
met_comp_long <- met_comp %>%
pivot_longer(cols = c("Modularity_mean", "Communities_mean", "Density_mean", "Transitivity_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("Modularity_mean", "Communities_mean", "Density_mean", "Transitivity_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_comp_long, aes(x = p, y = Value,
color = Method,
linetype = Predicted_Matrix,  # Change to linetype
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.7, alpha=0.8) +  # Increase line size for better visibility
geom_point(size = 1, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
scale_linetype_manual("Integration", values = c("late"="dashed", "early"="dotted", "joint"="solid")) +  # Custom line types
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
met_comp_long <- met_comp %>%
pivot_longer(cols = c("Modularity_mean", "Density_mean", "Transitivity_mean", "VI_mean", "NMI_mean", "ARI_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("Modularity_mean", "Density_mean", "Transitivity_mean", "VI_mean", "NMI_mean", "ARI_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_comp_long, aes(x = p, y = Value,
color = Method,
linetype = Predicted_Matrix,  # Change to linetype
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.7, alpha=0.8) +  # Increase line size for better visibility
geom_point(size = 1, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
scale_linetype_manual("Integration", values = c("late"="dashed", "early"="dotted", "joint"="solid")) +  # Custom line types
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
knitr::opts_knit$set(root.dir = "/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results",message=FALSE, warning=FALSE)
library(dplyr)
library(purrr)
library(patchwork)
library(tidyr)
library(ggplot2)
met_files <- c("/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp100_10runs.txt",
"/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp200_10runs.txt",
"/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp500_10runs.txt")
read_and_fulljoin <- function(files) {
df_list <- lapply(files, read.table, header = TRUE, sep = "\t", stringsAsFactors = FALSE)
full_joined_df <- Reduce(function(x, y) full_join(x, y), df_list)
return(full_joined_df)
}
met_data <- read_and_fulljoin(met_files)
met_late <- met_data %>%
mutate(Ratio = as.character(Ratio_mean),
p = as.character(p_mean)) %>%
filter(Predicted_Matrix %in% c("vote", "union", "inet")) %>%
filter(Method != "JRF")
met_late_long <- met_late %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_late_long, aes(x = p, y = Value,
color = Method,
shape = Predicted_Matrix,
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.4, alpha=0.7) +  # Slightly increase line size and adjust transparency
geom_point(size = 2, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
ggsave("./../analysis/simulation/plot/late_dots_n100.png", plot_final, width = 8, height = 5, dpi = 300, bg = "white")
met_comp <- met_data %>%
mutate(Ratio = as.character(Ratio_mean),
p = as.character(p_mean)) %>%
filter(!Predicted_Matrix %in% c("inet", "union")) %>%
mutate(
Predicted_Matrix = ifelse(Predicted_Matrix == "vote", "late", Predicted_Matrix),
Predicted_Matrix = ifelse(Method == "JRF", "joint", Predicted_Matrix)  # Replace JRF with joint
)
met_comp_long <- met_comp %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_comp_long, aes(x = p, y = Value,
color = Method,
linetype = Predicted_Matrix,  # Change to linetype
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.7, alpha=0.8) +  # Increase line size for better visibility
geom_point(size = 1, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
scale_linetype_manual("Integration", values = c("late"="dashed", "early"="dotted", "joint"="solid")) +  # Custom line types
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
ggsave("./../analysis/simulation/plot/metrics_comp.png", plot_final, width = 8, height = 5, dpi = 300, bg = "white")
met_comp_long <- met_comp %>%
pivot_longer(cols = c("Modularity_mean", "Density_mean", "Transitivity_mean", "VI_mean", "NMI_mean", "ARI_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("Modularity_mean", "Density_mean", "Transitivity_mean", "VI_mean", "NMI_mean", "ARI_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_comp_long, aes(x = p, y = Value,
color = Method,
linetype = Predicted_Matrix,  # Change to linetype
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.7, alpha=0.8) +  # Increase line size for better visibility
geom_point(size = 1, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
scale_linetype_manual("Integration", values = c("late"="dashed", "early"="dotted", "joint"="solid")) +  # Custom line types
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
ggsave("./../analysis/simulation/plot/metrics_graph_comp.png", plot_final, width = 8, height = 5, dpi = 300, bg = "white")
ls
met_files <- c("/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp100n500_10runs.txt",
"/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp200n500_10runs.txt",
"/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp500n500_10runs.txt")
read_and_fulljoin <- function(files) {
df_list <- lapply(files, read.table, header = TRUE, sep = "\t", stringsAsFactors = FALSE)
full_joined_df <- Reduce(function(x, y) full_join(x, y), df_list)
return(full_joined_df)
}
met_data <- read_and_fulljoin(met_files)
met_late <- met_data %>%
mutate(Ratio = as.character(Ratio_mean),
p = as.character(p_mean)) %>%
filter(Predicted_Matrix %in% c("vote", "union", "inet")) %>%
filter(Method != "JRF")
met_late_long <- met_late %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_late_long, aes(x = p, y = Value,
color = Method,
shape = Predicted_Matrix,
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.4, alpha=0.7) +  # Slightly increase line size and adjust transparency
geom_point(size = 2, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
ggtitle("n=500 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
knitr::opts_knit$set(root.dir = "/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results",message=FALSE, warning=FALSE)
library(dplyr)
library(purrr)
library(patchwork)
library(tidyr)
library(ggplot2)
met_files <- c("/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp100_10runs.txt",
"/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp200_10runs.txt",
"/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp500_10runs.txt")
read_and_fulljoin <- function(files) {
df_list <- lapply(files, read.table, header = TRUE, sep = "\t", stringsAsFactors = FALSE)
full_joined_df <- Reduce(function(x, y) full_join(x, y), df_list)
return(full_joined_df)
}
met_data <- read_and_fulljoin(met_files)
met_late <- met_data %>%
mutate(Ratio = as.character(Ratio_mean),
p = as.character(p_mean)) %>%
filter(Predicted_Matrix %in% c("vote", "union", "inet")) %>%
filter(Method != "JRF")
met_late_long <- met_late %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_late_long, aes(x = p, y = Value,
color = Method,
shape = Predicted_Matrix,
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.4, alpha=0.7) +  # Slightly increase line size and adjust transparency
geom_point(size = 2, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
ggsave("./../analysis/simulation/plot/late_dots_n100.png", plot_final, width = 8, height = 5, dpi = 300, bg = "white")
met_comp <- met_data %>%
mutate(Ratio = as.character(Ratio_mean),
p = as.character(p_mean)) %>%
filter(!Predicted_Matrix %in% c("inet", "union")) %>%
mutate(
Predicted_Matrix = ifelse(Predicted_Matrix == "vote", "late", Predicted_Matrix),
Predicted_Matrix = ifelse(Method == "JRF", "joint", Predicted_Matrix)  # Replace JRF with joint
)
met_comp_long <- met_comp %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_comp_long, aes(x = p, y = Value,
color = Method,
linetype = Predicted_Matrix,  # Change to linetype
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.7, alpha=0.8) +  # Increase line size for better visibility
geom_point(size = 1, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
scale_linetype_manual("Integration", values = c("late"="dashed", "early"="dotted", "joint"="solid")) +  # Custom line types
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
ggsave("./../analysis/simulation/plot/metrics_comp.png", plot_final, width = 8, height = 5, dpi = 300, bg = "white")
met_comp_long <- met_comp %>%
pivot_longer(cols = c("Modularity_mean", "Density_mean", "Transitivity_mean", "VI_mean", "NMI_mean", "ARI_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("Modularity_mean", "Density_mean", "Transitivity_mean", "VI_mean", "NMI_mean", "ARI_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_comp_long, aes(x = p, y = Value,
color = Method,
linetype = Predicted_Matrix,  # Change to linetype
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.7, alpha=0.8) +  # Increase line size for better visibility
geom_point(size = 1, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
scale_linetype_manual("Integration", values = c("late"="dashed", "early"="dotted", "joint"="solid")) +  # Custom line types
ggtitle("n=100 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
ggsave("./../analysis/simulation/plot/metrics_graph_comp.png", plot_final, width = 8, height = 5, dpi = 300, bg = "white")
met_files <- c("/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp100n500_10runs.txt",
"/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp200n500_10runs.txt",
"/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/simp500n500_10runs.txt")
read_and_fulljoin <- function(files) {
df_list <- lapply(files, read.table, header = TRUE, sep = "\t", stringsAsFactors = FALSE)
full_joined_df <- Reduce(function(x, y) full_join(x, y), df_list)
return(full_joined_df)
}
met_data <- read_and_fulljoin(met_files)
met_late <- met_data %>%
mutate(Ratio = as.character(Ratio_mean),
p = as.character(p_mean)) %>%
filter(Predicted_Matrix %in% c("vote", "union", "inet")) %>%
filter(Method != "JRF")
met_late_long <- met_late %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_late_long, aes(x = p, y = Value,
color = Method,
shape = Predicted_Matrix,
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.4, alpha=0.7) +  # Slightly increase line size and adjust transparency
geom_point(size = 2, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
ggtitle("n=500 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
ggsave("./../analysis/simulation/plot/late_dots_n500.png", plot_final, width = 8, height = 5, dpi = 300, bg = "white")
met_comp <- met_data %>%
mutate(Ratio = as.character(Ratio_mean),
p = as.character(p_mean)) %>%
filter(!Predicted_Matrix %in% c("inet", "union")) %>%
mutate(
Predicted_Matrix = ifelse(Predicted_Matrix == "vote", "late", Predicted_Matrix),
Predicted_Matrix = ifelse(Method == "JRF", "joint", Predicted_Matrix)  # Replace JRF with joint
)
met_comp_long <- met_comp %>%
pivot_longer(cols = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("TPR_mean", "FPR_mean", "Precision_mean", "F1_mean", "MCC_mean", "Time_in_Minutes_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_comp_long, aes(x = p, y = Value,
color = Method,
linetype = Predicted_Matrix,  # Change to linetype
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.7, alpha=0.8) +  # Increase line size for better visibility
geom_point(size = 1, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
scale_linetype_manual("Integration", values = c("late"="dashed", "early"="dotted", "joint"="solid")) +  # Custom line types
ggtitle("n=500 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
ggsave("./../analysis/simulation/plot/metrics_comp_n500.png", plot_final, width = 8, height = 5, dpi = 300, bg = "white")
met_comp_long <- met_comp %>%
pivot_longer(cols = c("Modularity_mean", "Density_mean", "Transitivity_mean", "VI_mean", "NMI_mean", "ARI_mean"),
names_to = "Metric", values_to = "Value") %>%
mutate(Metric = factor(Metric, levels = c("Modularity_mean", "Density_mean", "Transitivity_mean", "VI_mean", "NMI_mean", "ARI_mean")),
p = factor(p, levels = c("82", "217", "554")))
plot_base <- ggplot(met_comp_long, aes(x = p, y = Value,
color = Method,
linetype = Predicted_Matrix,  # Change to linetype
group = interaction(Method, Predicted_Matrix))) +
geom_line(size = 0.7, alpha=0.8) +  # Increase line size for better visibility
geom_point(size = 1, alpha=0.8) +    # Increase point size for better visibility
labs(x = "Number of Genes (p)", y = "Performance", color = "Method", shape = "Late Strategy") +
theme_minimal() +
scale_color_manual("Methods", values = c("GENIE3"="purple4", "GRNBoost2"="forestgreen", "JRF"="darkorange")) +
scale_linetype_manual("Integration", values = c("late"="dashed", "early"="dotted", "joint"="solid")) +  # Custom line types
ggtitle("n=500 k=3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
plot_final <- plot_base + facet_wrap(~Metric, scales = "free", ncol = 3)
print(plot_final)
ggsave("./../analysis/simulation/plot/metrics_graph_comp_n500.png", plot_final, width = 8, height = 5, dpi = 300, bg = "white")
setwd("/home/francescoc/Desktop/scGraphVerse/data/")
ddir <- "/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/"
pdir <- "/home/francescoc/Desktop/scGraphVerse/analysis/simulation/plot/"
setwd("/home/francescoc/Desktop/scGraphVerse/data/")
ddir <- "/home/francescoc/Desktop/scGraphVerse/analysis/simulation/results/"
pdir <- "/home/francescoc/Desktop/scGraphVerse/analysis/simulation/plot/"
count_matrices <- readRDS("./../analysis/simulation/simdata/sim_n100p500.RDS")
count_matrices <- lapply(count_matrices, t)
View()
View(count_matrices[[1]])
for (i in seq_along(count_matrices)) {
write.csv(count_matrices[[i]], file = paste0("matrix", i, ".csv"), row.names = T, col.names = T)
}
args(write.csv)
help("write.csv")
getwd()
